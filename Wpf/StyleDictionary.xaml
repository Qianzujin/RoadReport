<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Wpf">

    <!--Lable图标略过变色-->
    <Style x:Key="LabelMouseOver" TargetType="{x:Type Label}">
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <StackPanel>
                        <Label Name="_label" Content="{TemplateBinding Content}"  FontFamily="./Resources/#iconfont"></Label>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="_label" Property="Background" Value="Red" ></Setter>
                            <Setter Property="Cursor" Value="Hand" ></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--GridDataStyle 表单样式-->
    <Style x:Key="DataGridStyle" TargetType="DataGrid">
        <Setter Property="HeadersVisibility" Value="Column" ></Setter>
        <Setter Property="ColumnHeaderStyle" Value="{DynamicResource ColumnHeaderStyle}"></Setter>
        <Setter Property="CellStyle" Value="{DynamicResource CellStyle}"></Setter>
        <Setter Property="RowStyle" Value="{DynamicResource RowStyle}"></Setter>
        <Setter Property="Background" Value="White"></Setter>
        <Setter Property="EnableRowVirtualization" Value="False"></Setter>
        <Setter Property="GridLinesVisibility" Value="None"></Setter>
        <Setter Property="CanUserAddRows" Value="False"></Setter>
        <!--禁止在尾行手动添加数据-->
        <Setter Property="AutoGenerateColumns" Value="False"></Setter>
        <Setter Property="IsEnabled" Value="True"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
    </Style>
    <Style x:Key="ColumnHeaderStyle" TargetType="DataGridColumnHeader">
        <Setter Property="Height" Value="35"></Setter>
        <Setter Property="Background" Value="#F2F2F2"></Setter>
        <Setter Property="BorderThickness" Value="0.5"></Setter>
        <Setter Property="BorderBrush" Value="#CBCBCB"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <!--水平居中-->
        <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
        <!--垂直居中-->
    </Style>

    <Style x:Key="RowStyle" TargetType="DataGridRow">
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="#F2F2F2"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True"></Condition>
                    <Condition Property="IsFocused" Value="True"></Condition>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="#F2F2F2"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CellStyle" TargetType="DataGridCell">
        <Setter Property="Height" Value="35"></Setter>
        <Setter Property="FontSize" Value="13"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridCell">
                    <Border x:Name="Bg" Background="Transparent" BorderThickness="0.5" UseLayoutRounding="True" BorderBrush="#FFCBCBCB">
                        <ContentPresenter HorizontalAlignment="Center"  VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background"  Value="#CBCBCB" />
                <Setter Property="Foreground" Value="#000000" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <!--Button 删除按钮样式-->
    <Style x:Key="DeleteButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="#E70834"></Setter>
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="Template" >
            <Setter.Value >
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}"   BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="0" CornerRadius="7,7,7,7">
                        <ContentPresenter    Content="{TemplateBinding ContentControl.Content}" HorizontalAlignment="Center" VerticalAlignment="Center" ></ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Button按钮样式-->
    <Style x:Key="ButtonNormal" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="Black"></Setter>
        <Setter Property="Template" >
            <Setter.Value >
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="0.5" CornerRadius="5,5,5,5">
                        <ContentPresenter Content="{TemplateBinding ContentControl.Content}" HorizontalAlignment="Center" VerticalAlignment="Center" ></ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="#008FEE"></Setter>
                <Setter Property="Background" Value="#ADECFC"></Setter>
                <Setter Property="Cursor" Value="Hand"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Button按钮样式-->
    <Style x:Key="ButtonWarn" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="Black"></Setter>
        <Setter Property="Template" >
            <Setter.Value >
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="0.5" CornerRadius="5,5,5,5">
                        <ContentPresenter Content="{TemplateBinding ContentControl.Content}" HorizontalAlignment="Center" VerticalAlignment="Center" ></ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="Red"></Setter>
                <Setter Property="Background" Value="#ADECFC"></Setter>
                <Setter Property="Cursor" Value="Hand"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--CheckBox选中按钮-->
    <Style x:Key="CheckBoxStyle" TargetType="CheckBox">
        <Setter Property="IsChecked" Value="False"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#4BA21F"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Border Width="50" Height="25" CornerRadius="13" Background="{TemplateBinding Background}" >
                        <Grid>
                            <Border x:Name="border" Width="18" Height="18" CornerRadius="9" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="1 0" Background="White">
                                <Border.RenderTransform>
                                    <TranslateTransform  X="0"/>
                                </Border.RenderTransform>
                            </Border>
                            <TextBlock Margin="0 0 0 0" x:Name="txt" Text="{TemplateBinding Content}" VerticalAlignment="Center" Foreground="White" >
                                <TextBlock.RenderTransform>
                                    <TranslateTransform   X="18"></TranslateTransform>
                                </TextBlock.RenderTransform>
                            </TextBlock>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Text" TargetName="txt" Value="{Binding Tag,RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" To="30" Duration="00:00:0.2"/>
                                        <DoubleAnimation Storyboard.TargetName="txt" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" To="0" Duration="00:00:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" To="0" Duration="00:00:0.2"/>
                                        <DoubleAnimation Storyboard.TargetName="txt" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" To="18" Duration="00:00:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Text" TargetName="txt" Value="{Binding Content,RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>